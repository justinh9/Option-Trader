import pandas as pd
import numpy as np


def calculate_zscore(series, window_size=20):
    rolling_mean = series.rolling(window=window_size).mean()
    rolling_std = series.rolling(window=window_size).std()
    return (series - rolling_mean) / rolling_std

def generate_trades(data, zscore_threshold=1.0):
    trades = []  # List to store the trading signals

    data['zscore'] = calculate_zscore(data['Close'])

    # Generating trading signals based on the z-score
    data['signal'] = np.where(data['zscore'] > zscore_threshold, -1, np.nan)
    data['signal'] = np.where(data['zscore'] < -zscore_threshold, 1, data['signal'])

    # Determining the entry and exit points for the trades
    data['position'] = data['signal'].ffill().fillna(0)
    data['entry_exit'] = data['position'].diff()

    # Generating the trades based on entry and exit points
    for index, row in data.iterrows():
        if row['entry_exit'] == 1:
            trades.append(('Buy', row['Close']))
        elif row['entry_exit'] == -1:
            trades.append(('Sell', row['Close']))

    return trades
e
data = pd.read_csv('historical_data.csv')  # Here, I am backtesting and will implement connecting to the Alpha Vantage API once backtesting is done.


trades = generate_trades(data)
for trade in trades:
    print(trade)
